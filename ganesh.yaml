apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-mongo
  namespace: ganesh
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spring-boot-mongo
  template:
    metadata:
      labels:
        app: spring-boot-mongo
    spec:
      containers:
      - name: spring-boot-mongo
        image: ganeshtudumu/spring-boot-mongo:latest1.0.0
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATA_MONGODB_URI
          value: mongodb://mongo:27017/mydatabase
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-mongo-service
  namespace: ganesh
spec:
  selector:
    app: spring-boot-mongo
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30081
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: ganesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:6.0
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
      volumes:
      - name: mongo-data
        hostPath:
          path: /mnt/data/mongo
          type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: ganesh
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  clusterIP: None   # headless service for internal access
